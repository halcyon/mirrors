<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Clojure Don’ts: Lazy Effects</title>
	<atom:link href="https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects/feed" rel="self" type="application/rss+xml" />
	<link>https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects</link>
	<description>From programming to everything else</description>
	<lastBuildDate>Fri, 01 Jan 2016 15:25:57 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6</generator>
	<item>
		<title>By: Stuart</title>
		<link>https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects/comment-page-1#comment-54822</link>
		<dc:creator><![CDATA[Stuart]]></dc:creator>
		<pubDate>Tue, 15 Sep 2015 21:19:43 +0000</pubDate>
		<guid isPermaLink="false">http://stuartsierra.com/?p=883#comment-54822</guid>
		<description><![CDATA[My recommendation is to avoid side-effecting functions in lazy sequences, period.]]></description>
		<content:encoded><![CDATA[<p>My recommendation is to avoid side-effecting functions in lazy sequences, period.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Chris Oakman</title>
		<link>https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects/comment-page-1#comment-54821</link>
		<dc:creator><![CDATA[Chris Oakman]]></dc:creator>
		<pubDate>Tue, 15 Sep 2015 18:45:52 +0000</pubDate>
		<guid isPermaLink="false">http://stuartsierra.com/?p=883#comment-54821</guid>
		<description><![CDATA[I wrote this on the ClojureScript cheatsheet under the &quot;Seq in, Seq out&quot; tooltip:

&quot;You can force a sequence to evaluate all its elements with the doall function. This is useful when you want to see the results of a side-effecting function over an entire sequence.&quot;

Maybe I should change it to refence doseq instead? Thoughts?

Thanks,
Chris Oakman]]></description>
		<content:encoded><![CDATA[<p>I wrote this on the ClojureScript cheatsheet under the &#8220;Seq in, Seq out&#8221; tooltip:</p>
<p>&#8220;You can force a sequence to evaluate all its elements with the doall function. This is useful when you want to see the results of a side-effecting function over an entire sequence.&#8221;</p>
<p>Maybe I should change it to refence doseq instead? Thoughts?</p>
<p>Thanks,<br />
Chris Oakman</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Henry</title>
		<link>https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects/comment-page-1#comment-54808</link>
		<dc:creator><![CDATA[Henry]]></dc:creator>
		<pubDate>Wed, 26 Aug 2015 18:20:52 +0000</pubDate>
		<guid isPermaLink="false">http://stuartsierra.com/?p=883#comment-54808</guid>
		<description><![CDATA[Mapv is also eager I believe]]></description>
		<content:encoded><![CDATA[<p>Mapv is also eager I believe</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Stuart</title>
		<link>https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects/comment-page-1#comment-54807</link>
		<dc:creator><![CDATA[Stuart]]></dc:creator>
		<pubDate>Tue, 25 Aug 2015 19:42:22 +0000</pubDate>
		<guid isPermaLink="false">http://stuartsierra.com/?p=883#comment-54807</guid>
		<description><![CDATA[As with anything else, use your own judgment. The key question to ask is, “Does it matter *when* this effect happens?”]]></description>
		<content:encoded><![CDATA[<p>As with anything else, use your own judgment. The key question to ask is, “Does it matter *when* this effect happens?”</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: dasuxullebt</title>
		<link>https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects/comment-page-1#comment-54806</link>
		<dc:creator><![CDATA[dasuxullebt]]></dc:creator>
		<pubDate>Tue, 25 Aug 2015 19:12:36 +0000</pubDate>
		<guid isPermaLink="false">http://stuartsierra.com/?p=883#comment-54806</guid>
		<description><![CDATA[What about stuff like DiffArrays? That is, structures that have mutable state, but abstract that state away? Or debugging?]]></description>
		<content:encoded><![CDATA[<p>What about stuff like DiffArrays? That is, structures that have mutable state, but abstract that state away? Or debugging?</p>
]]></content:encoded>
	</item>
</channel>
</rss>

<!-- Dynamic page generated in 0.302 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-09-02 12:56:44 -->

<!-- Compression = gzip -->