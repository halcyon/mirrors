<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>Comments on: Ruby vs. Lisp</title>
	<atom:link href="https://stuartsierra.com/2007/07/31/ruby-vs-lisp/feed" rel="self" type="application/rss+xml" />
	<link>https://stuartsierra.com/2007/07/31/ruby-vs-lisp</link>
	<description>From programming to everything else</description>
	<lastBuildDate>Fri, 01 Jan 2016 15:25:57 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6</generator>
	<item>
		<title>By: Anonymous</title>
		<link>https://stuartsierra.com/2007/07/31/ruby-vs-lisp/comment-page-1#comment-15622</link>
		<dc:creator><![CDATA[Anonymous]]></dc:creator>
		<pubDate>Wed, 01 Aug 2007 16:19:56 +0000</pubDate>
		<guid isPermaLink="false">http://stuartsierra.com/2007/07/31/ruby-vs-lisp#comment-15622</guid>
		<description><![CDATA[I took umbrage Syntax lambda comment as well.  In addition to that I think you&#039;ve misrepresented the Common Lisp libraries situation as well.  There are several good date/time libraries for Common Lisp. e.g. http://common-lisp.net/project/cl-date-calc/ and http://common-lisp.net/project/local-time/

I don&#039;t find any problems handling files in Common Lisp.  What were you referring to there?

I was surprised to see string munging listed as well.  There are plenty of great libraries for string manipulation.  e.g. http://weitz.de/cl-ppcre/ (Perl compatible regular expressions which out perform Perl), http://www.geocities.com/mparker762/clawk.html#clawk (Unix Awk in Common Lisp), http://weitz.de/cl-interpol/ (string interpolation like Ruby&#039;s &quot;#{foo}&quot; syntax).

Try the &quot;Text Processing&quot; tag at The Common Lisp Directory -- http://www.cl-user.net/asp/tags/11032]]></description>
		<content:encoded><![CDATA[<p>I took umbrage Syntax lambda comment as well.  In addition to that I think you&#8217;ve misrepresented the Common Lisp libraries situation as well.  There are several good date/time libraries for Common Lisp. e.g. <a href="http://common-lisp.net/project/cl-date-calc/" rel="nofollow">http://common-lisp.net/project/cl-date-calc/</a> and <a href="http://common-lisp.net/project/local-time/" rel="nofollow">http://common-lisp.net/project/local-time/</a></p>
<p>I don&#8217;t find any problems handling files in Common Lisp.  What were you referring to there?</p>
<p>I was surprised to see string munging listed as well.  There are plenty of great libraries for string manipulation.  e.g. <a href="http://weitz.de/cl-ppcre/" rel="nofollow">http://weitz.de/cl-ppcre/</a> (Perl compatible regular expressions which out perform Perl), <a href="http://www.geocities.com/mparker762/clawk.html#clawk" rel="nofollow">http://www.geocities.com/mparker762/clawk.html#clawk</a> (Unix Awk in Common Lisp), <a href="http://weitz.de/cl-interpol/" rel="nofollow">http://weitz.de/cl-interpol/</a> (string interpolation like Ruby&#8217;s &#8220;#{foo}&#8221; syntax).</p>
<p>Try the &#8220;Text Processing&#8221; tag at The Common Lisp Directory &#8212; <a href="http://www.cl-user.net/asp/tags/11032" rel="nofollow">http://www.cl-user.net/asp/tags/11032</a></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Zach Beane</title>
		<link>https://stuartsierra.com/2007/07/31/ruby-vs-lisp/comment-page-1#comment-15573</link>
		<dc:creator><![CDATA[Zach Beane]]></dc:creator>
		<pubDate>Tue, 31 Jul 2007 15:31:53 +0000</pubDate>
		<guid isPermaLink="false">http://stuartsierra.com/2007/07/31/ruby-vs-lisp#comment-15573</guid>
		<description><![CDATA[Which CL programmers go out of their way to avoid lambda?]]></description>
		<content:encoded><![CDATA[<p>Which CL programmers go out of their way to avoid lambda?</p>
]]></content:encoded>
	</item>
</channel>
</rss>

<!-- Dynamic page generated in 0.260 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-09-02 13:01:50 -->

<!-- Compression = gzip -->